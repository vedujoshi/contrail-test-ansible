- hosts: all
  tasks:

- hosts: kubernetes-master,kubernetes-slaves
  vars:
    centos_kube_version: 1.7.5-0
  tasks:
   - name: Setup openshift env
     block:
#       - set_fact: subscription_username="{{ lookup('env', 'SUBSCRIPTION_USERNAME') }}"
#       - set_fact: subscription_password="{{ lookup('env', 'SUBSCRIPTION_PASSWORD') }}"
#       - set_fact: subscription_pool="{{ lookup('env', 'SUBSCRIPTION_POOL') }}"

#       - name: Setup subscription manager
#         shell : |
#            "subscription-manager register --username {{ subscription_username }} --password {{ subscription_password }}  --force; sudo subscription-manager attach --pool {{ subscription_pool }}"
#            "subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-rh-common-rpms --enable=rhel-ha-for-rhel-7-server-rpms"
       - name: Install epel repo
         shell: rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

#       - name: Setup sources for Centos
#         script: ./utils/set_sources_centos.sh

       - name: Install base packages
         package: name={{ item }} state=present
         with_items:
          - wget
          - git
          - net-tools
          - bind-utils
          - iptables-services
          - bridge-utils
          - bash-completion
          - kexec-tools
          - sos
          - psacct
#          - docker-1.12.6

       - name: Do yum update
         shell: yum update

#       - name: Enable services on centos
#         service: name={{ item }} state=started enabled=yes
#         with_items:
#          - docker
         when:
           - ansible_os_family == 'RedHat'

#   - name: Update iptables
#     shell: echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables


#- hosts: kubernetes-master
#  tasks:
#   - name: Update kubeadm.conf
#     lineinfile: dest=/etc/systemd/system/kubelet.service.d/10-kubeadm.conf state=absent regexp="^Environment=\"KUBELET_NETWORK_ARGS"
#
#   - name: restart kubelet
#     systemd:
#       state: restarted
#       daemon_reload: yes
#       name: kubelet
#
#   - name: Sleep 10 sec
#     pause: 
#       seconds: 10
#
#   - name: kubeadm init on master
#     shell: "kubeadm reset > /dev/null 2>&1; kubeadm init |grep 'kubeadm join'"
#     register: kubeadm_output
#   - set_fact:
#       kubejoin_cmd: "{{kubeadm_output.stdout}}"
#     tags: kubeadm_init
#   - name: flush iptables for join to happen
#     shell: iptables --flush
#     when:
#       - ansible_os_family == 'RedHat'
#
#- hosts: kubernetes-slaves
#  tasks:
#   - set_fact:
#      kubeadm: "{{hostvars[groups['kubernetes-master'][0]].kubejoin_cmd}}"
#   - name: Stop kubepods-burstable as WA for bug https://github.com/kubernetes/kubernetes/issues/43856
#     command: systemctl stop kubepods-burstable.slice
#     when: 
#       - ansible_os_family == 'RedHat'
#   - name: Reset kubeadm
#     shell: kubeadm reset
#     ignore_errors: true
#   - name: kubeadm join on slaves
#     shell: "{{kubeadm}} --skip-preflight-checks"
#     tags: kubeadm_init
#   - name: restart kubelet on slaves as workaround for https://github.com/kubernetes/release/issues/171
#     systemd:
#       state: restarted
#       name: kubelet
#
#- hosts: kubernetes-master
#  tasks:
#   - name: Enable k8s insecure access 
#     shell: "sed -i 's/.*insecure-port.*/    - --insecure-port=8080/g' /etc/kubernetes/manifests/kube-apiserver.yaml"
#   - name: Restart kubelet
#     systemd:
#       state: restarted
#       name: kubelet
#   - name: Wait for kubelet to stabilize
#     shell: sleep 20
#   - name: Update kube-dns deployment
#     script: ./utils/update_kubedns.sh
#   - name: Create cluster role binding for contrail-kube-manager
#     shell: "kubectl create clusterrolebinding contrail-kube-manager --clusterrole=cluster-admin --serviceaccount=default:default"
#   - name: Write secret token to secret.txt
#     shell: "kubectl describe secret default | grep \"token:\" | awk '{ print $2}'"
#     register: secret_token
#   - set_fact:
#       secret_token_text: "{{secret_token.stdout}}"
#
#- hosts: localhost
#  tasks:
#   - set_fact:
#      secret_token_text: "{{hostvars[groups['kubernetes-master'][0]].secret_token_text}}"
#   - copy: content="{{ secret_token_text }}" dest={{ playbook_dir }}/secret.txt
